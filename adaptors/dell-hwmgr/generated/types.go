// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"encoding/json"
	"fmt"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for CloudCloudType.
const (
	CLOUDTYPEDEF CloudCloudType = "CLOUDTYPE_DEF"
	KUBERNETES   CloudCloudType = "KUBERNETES"
	RHOCP        CloudCloudType = "RHOCP"
)

// Defines values for ComputeKind.
const (
	KINDDEF  ComputeKind = "KIND_DEF"
	LOGICAL  ComputeKind = "LOGICAL"
	PHYSICAL ComputeKind = "PHYSICAL"
)

// Defines values for ComputeRealTime.
const (
	ComputeRealTimeFALSE ComputeRealTime = "FALSE"
	ComputeRealTimeRTDEF ComputeRealTime = "RT_DEF"
	ComputeRealTimeTRUE  ComputeRealTime = "TRUE"
)

// Defines values for ResourceAdminState.
const (
	LOCKED            ResourceAdminState = "LOCKED"
	SHUTTINGDOWN      ResourceAdminState = "SHUTTING_DOWN"
	UNKNOWNADMINSTATE ResourceAdminState = "UNKNOWN_ADMINSTATE"
	UNLOCKED          ResourceAdminState = "UNLOCKED"
)

// Defines values for ResourceAdminStatus.
const (
	ALARMOUTSTANDING   ResourceAdminStatus = "ALARM_OUTSTANDING"
	CLEAR              ResourceAdminStatus = "CLEAR"
	CRITICAL           ResourceAdminStatus = "CRITICAL"
	MAJOR              ResourceAdminStatus = "MAJOR"
	MINOR              ResourceAdminStatus = "MINOR"
	UNDERREPAIR        ResourceAdminStatus = "UNDER_REPAIR"
	UNKNOWNADMINSTATUS ResourceAdminStatus = "UNKNOWN_ADMINSTATUS"
)

// Defines values for ResourceAvStatus.
const (
	ResourceAvStatusDEGRADED        ResourceAvStatus = "DEGRADED"
	ResourceAvStatusDEPENDANCY      ResourceAvStatus = "DEPENDANCY"
	ResourceAvStatusFAILED          ResourceAvStatus = "FAILED"
	ResourceAvStatusINTEST          ResourceAvStatus = "IN_TEST"
	ResourceAvStatusLOGFULL         ResourceAvStatus = "LOG_FULL"
	ResourceAvStatusNOTINSTALLED    ResourceAvStatus = "NOT_INSTALLED"
	ResourceAvStatusOFFDUTY         ResourceAvStatus = "OFF_DUTY"
	ResourceAvStatusOFFLINE         ResourceAvStatus = "OFFLINE"
	ResourceAvStatusPOWEROFF        ResourceAvStatus = "POWER_OFF"
	ResourceAvStatusUNKNOWNAVSTATUS ResourceAvStatus = "UNKNOWN_AVSTATUS"
)

// Defines values for ResourceCStatus.
const (
	OPEN                ResourceCStatus = "OPEN"
	PARTOFSERVICELOCKED ResourceCStatus = "PART_OF_SERVICE_LOCKED"
	RESERVEDFORTEST     ResourceCStatus = "RESERVED_FOR_TEST"
	SUBJECTTOTEST       ResourceCStatus = "SUBJECT_TO_TEST"
	SUSPENDED           ResourceCStatus = "SUSPENDED"
	UNKNOWNCSTATUS      ResourceCStatus = "UNKNOWN_CSTATUS"
)

// Defines values for ResourceOpState.
const (
	DISABLED       ResourceOpState = "DISABLED"
	ENABLED        ResourceOpState = "ENABLED"
	UNKNOWNOPSTATE ResourceOpState = "UNKNOWN_OPSTATE"
)

// Defines values for ResourcePStatus.
const (
	INITIALIZATIONREQUIRED ResourcePStatus = "INITIALIZATION_REQUIRED"
	INITIALIZING           ResourcePStatus = "INITIALIZING"
	NOTINITIALIZED         ResourcePStatus = "NOT_INITIALIZED"
	REPORTING              ResourcePStatus = "REPORTING"
	TERMINATING            ResourcePStatus = "TERMINATING"
	UNKNOWNPSTATUS         ResourcePStatus = "UNKNOWN_PSTATUS"
)

// Defines values for ResourcePublic.
const (
	ResourcePublicFALSE      ResourcePublic = "FALSE"
	ResourcePublicTRUE       ResourcePublic = "TRUE"
	ResourcePublicUNKNOWNPUB ResourcePublic = "UNKNOWN_PUB"
)

// Defines values for ResourceSStatus.
const (
	COLDSTANDBY      ResourceSStatus = "COLD_STANDBY"
	HOTSTANDBY       ResourceSStatus = "HOT_STANDBY"
	NONE             ResourceSStatus = "NONE"
	PROVIDINGSERVICE ResourceSStatus = "PROVIDING_SERVICE"
	UNKNOWNSSTATUS   ResourceSStatus = "UNKNOWN_SSTATUS"
)

// Defines values for ResourceUStatus.
const (
	ResourceUStatusKNOWN          ResourceUStatus = "KNOWN"
	ResourceUStatusUNKNOWN        ResourceUStatus = "UNKNOWN"
	ResourceUStatusUNKNOWNUSTATUS ResourceUStatus = "UNKNOWN_USTATUS"
)

// Defines values for ResourceUsageState.
const (
	ACTIVE            ResourceUsageState = "ACTIVE"
	BUSY              ResourceUsageState = "BUSY"
	IDLE              ResourceUsageState = "IDLE"
	UNKNOWNUSAGESTATE ResourceUsageState = "UNKNOWN_USAGESTATE"
)

// Defines values for ApiprotoComputeRole.
const (
	ApiprotoComputeRolePRIMARY ApiprotoComputeRole = "PRIMARY"
	ApiprotoComputeRoleREPLICA ApiprotoComputeRole = "REPLICA"
	ApiprotoComputeRoleROLEDEF ApiprotoComputeRole = "ROLE_DEF"
	ApiprotoComputeRoleUNKNOWN ApiprotoComputeRole = "UNKNOWN"
	ApiprotoComputeRoleWORKER  ApiprotoComputeRole = "WORKER"
)

// Defines values for ApiprotoComputeSelectorRole.
const (
	CONTROLLER ApiprotoComputeSelectorRole = "CONTROLLER"
	DUPLEX     ApiprotoComputeSelectorRole = "DUPLEX"
	ROLEDEF    ApiprotoComputeSelectorRole = "ROLE_DEF"
	WORKER     ApiprotoComputeSelectorRole = "WORKER"
)

// Defines values for ApiprotoResourceResourceType.
const (
	BMC           ApiprotoResourceResourceType = "BMC"
	CLOUD         ApiprotoResourceResourceType = "CLOUD"
	COMPUTE       ApiprotoResourceResourceType = "COMPUTE"
	NETWORKDEVICE ApiprotoResourceResourceType = "NETWORKDEVICE"
)

// Defines values for ApiprotoResponseStatus.
const (
	ApiprotoResponseStatusBUSY      ApiprotoResponseStatus = "BUSY"
	ApiprotoResponseStatusCANCELLED ApiprotoResponseStatus = "CANCELLED"
	ApiprotoResponseStatusCOMPLETE  ApiprotoResponseStatus = "COMPLETE"
	ApiprotoResponseStatusFAILED    ApiprotoResponseStatus = "FAILED"
)

// CloudCloudType defines model for CloudCloudType.
type CloudCloudType string

// ComputeKind defines model for ComputeKind.
type ComputeKind string

// ComputeRealTime defines model for ComputeRealTime.
type ComputeRealTime string

// ResourceAdminState defines model for ResourceAdminState.
type ResourceAdminState string

// ResourceAdminStatus defines model for ResourceAdminStatus.
type ResourceAdminStatus string

// ResourceAvStatus defines model for ResourceAvStatus.
type ResourceAvStatus string

// ResourceCStatus defines model for ResourceCStatus.
type ResourceCStatus string

// ResourceOpState defines model for ResourceOpState.
type ResourceOpState string

// ResourcePStatus defines model for ResourcePStatus.
type ResourcePStatus string

// ResourcePublic defines model for ResourcePublic.
type ResourcePublic string

// ResourceSStatus defines model for ResourceSStatus.
type ResourceSStatus string

// ResourceUStatus defines model for ResourceUStatus.
type ResourceUStatus string

// ResourceUsageState defines model for ResourceUsageState.
type ResourceUsageState string

// ApiprotoBaseResource defines model for apiprotoBaseResource.
type ApiprotoBaseResource struct {
	CreatedAt            *string `json:"createdAt,omitempty"`
	CreatedBy            *string `json:"createdBy,omitempty"`
	Description          *string `json:"description,omitempty"`
	Id                   *string `json:"id,omitempty"`
	IsPrivate            *bool   `json:"isPrivate,omitempty"`
	Name                 *string `json:"name,omitempty"`
	ResourceAvailability *string `json:"resourceAvailability,omitempty"`
	Tenant               *string `json:"tenant,omitempty"`
	UpdatedAt            *string `json:"updatedAt,omitempty"`
	Visibility           *string `json:"visibility,omitempty"`
}

// ApiprotoCloud defines model for apiprotoCloud.
type ApiprotoCloud struct {
	CloudDeploymentMode *string                             `json:"cloudDeploymentMode,omitempty"`
	CloudType           *CloudCloudType                     `json:"cloudType,omitempty"`
	ComputeSelectors    *map[string]ApiprotoComputeSelector `json:"computeSelectors,omitempty"`
	MgmtCloudDid        *string                             `json:"mgmtCloudDid,omitempty"`
}

// ApiprotoCompute defines model for apiprotoCompute.
type ApiprotoCompute struct {
	Bios        *string              `json:"bios,omitempty"`
	BmcId       *string              `json:"bmcId,omitempty"`
	DiskSize    *int32               `json:"diskSize,omitempty"`
	Kind        *ComputeKind         `json:"kind,omitempty"`
	Lom         *ApiprotoLom         `json:"lom,omitempty"`
	Memory      *string              `json:"memory,omitempty"`
	NpId        *string              `json:"npId,omitempty"`
	Os          *ApiprotoOs          `json:"os,omitempty"`
	RealTimeOS  *ComputeRealTime     `json:"realTimeOS,omitempty"`
	Role        *ApiprotoComputeRole `json:"role,omitempty"`
	Serial      *string              `json:"serial,omitempty"`
	SocketCores *int32               `json:"socketCores,omitempty"`
	SocketNum   *int32               `json:"socketNum,omitempty"`
}

// ApiprotoComputeRole defines model for apiprotoComputeRole.
type ApiprotoComputeRole string

// ApiprotoComputeSelector defines model for apiprotoComputeSelector.
type ApiprotoComputeSelector struct {
	Labels      *[]ApiprotoLabel             `json:"labels,omitempty"`
	NumComputes *int32                       `json:"numComputes,omitempty"`
	Role        *ApiprotoComputeSelectorRole `json:"role,omitempty"`
	RpId        *string                      `json:"rpId,omitempty"`
}

// ApiprotoComputeSelectorRole defines model for apiprotoComputeSelectorRole.
type ApiprotoComputeSelectorRole string

// ApiprotoDeploymentStatus defines model for apiprotoDeploymentStatus.
type ApiprotoDeploymentStatus struct {
	CreateExecution                   *string `json:"CreateExecution,omitempty"`
	DeploymentStatus                  *string `json:"DeploymentStatus,omitempty"`
	EnvironmentType                   *string `json:"EnvironmentType,omitempty"`
	HasSubDeployments                 *bool   `json:"HasSubDeployments,omitempty"`
	InstallationStatus                *string `json:"InstallationStatus,omitempty"`
	LatestExecution                   *string `json:"LatestExecution,omitempty"`
	LatestExecutionFinishedOperations *int32  `json:"LatestExecutionFinishedOperations,omitempty"`
	LatestExecutionStatus             *string `json:"LatestExecutionStatus,omitempty"`
	LatestExecutionTotalOperations    *int32  `json:"LatestExecutionTotalOperations,omitempty"`
	SubEnvironmentsCount              *int32  `json:"SubEnvironmentsCount,omitempty"`
	SubEnvironmentsStatus             *string `json:"SubEnvironmentsStatus,omitempty"`
	SubServicesCount                  *int32  `json:"SubServicesCount,omitempty"`
	SubServicesStatus                 *string `json:"SubServicesStatus,omitempty"`
}

// ApiprotoGroups defines model for apiprotoGroups.
type ApiprotoGroups struct {
	Group *[]string `json:"group,omitempty"`
}

// ApiprotoLabel defines model for apiprotoLabel.
type ApiprotoLabel struct {
	Key   *string `json:"Key,omitempty"`
	Value *string `json:"Value,omitempty"`
}

// ApiprotoLom defines model for apiprotoLom.
type ApiprotoLom struct {
	ApiKey     *string `json:"apiKey,omitempty"`
	IpAddress  *string `json:"ipAddress,omitempty"`
	MacAddress *string `json:"macAddress,omitempty"`
	Password   *string `json:"password,omitempty"`
	Port       *int32  `json:"port,omitempty"`
	Protocol   *string `json:"protocol,omitempty"`
	User       *string `json:"user,omitempty"`
}

// ApiprotoOs defines model for apiprotoOs.
type ApiprotoOs struct {
	ConfigData  *string `json:"configData,omitempty"`
	ConfigType  *string `json:"configType,omitempty"`
	Gateway     *string `json:"gateway,omitempty"`
	Hostname    *string `json:"hostname,omitempty"`
	IpAddress   *string `json:"ipAddress,omitempty"`
	MacAddress  *string `json:"macAddress,omitempty"`
	Name        *string `json:"name,omitempty"`
	Nameservers *string `json:"nameservers,omitempty"`
	Netmask     *string `json:"netmask,omitempty"`
	Password    *string `json:"password,omitempty"`
	Release     *string `json:"release,omitempty"`
	SshKey      *string `json:"sshKey,omitempty"`
	User        *string `json:"user,omitempty"`
	Vendor      *string `json:"vendor,omitempty"`
	Version     *string `json:"version,omitempty"`
}

// ApiprotoResource defines model for apiprotoResource.
type ApiprotoResource struct {
	Capabilities      *map[string]interface{}            `json:"Capabilities,omitempty"`
	Description       *string                            `json:"Description,omitempty"`
	Elements          *[]ApiprotoResource                `json:"Elements,omitempty"`
	Extensions        *map[string]map[string]interface{} `json:"Extensions,omitempty"`
	GlobalAssetId     *string                            `json:"GlobalAssetId,omitempty"`
	Groups            *ApiprotoGroups                    `json:"Groups,omitempty"`
	Id                *string                            `json:"Id,omitempty"`
	Labels            *[]ApiprotoLabel                   `json:"Labels,omitempty"`
	Name              *string                            `json:"Name,omitempty"`
	Res               *ApiprotoBaseResource              `json:"Res,omitempty"`
	ResType           *ApiprotoResourceResourceType      `json:"ResType,omitempty"`
	ResourceAttribute *ApiprotoResourceAttribute         `json:"ResourceAttribute,omitempty"`
	ResourcePoolId    *string                            `json:"ResourcePoolId,omitempty"`
	ResourceTypeId    *string                            `json:"ResourceTypeId,omitempty"`
	SiteId            *string                            `json:"SiteId,omitempty"`
	Status            *ApiprotoDeploymentStatus          `json:"Status,omitempty"`
	Tags              *[]string                          `json:"Tags,omitempty"`
	Workflow          *string                            `json:"Workflow,omitempty"`
	AState            *ResourceAdminState                `json:"aState,omitempty"`
	AStatus           *ResourceAdminStatus               `json:"aStatus,omitempty"`
	AvStatus          *ResourceAvStatus                  `json:"avStatus,omitempty"`
	CStatus           *ResourceCStatus                   `json:"cStatus,omitempty"`
	OpState           *ResourceOpState                   `json:"opState,omitempty"`
	PStatus           *ResourcePStatus                   `json:"pStatus,omitempty"`
	Public            *ResourcePublic                    `json:"public,omitempty"`
	SStatus           *ResourceSStatus                   `json:"sStatus,omitempty"`
	UState            *ResourceUsageState                `json:"uState,omitempty"`
	UStatus           *ResourceUStatus                   `json:"uStatus,omitempty"`
}

// ApiprotoResourceAttribute defines model for apiprotoResourceAttribute.
type ApiprotoResourceAttribute struct {
	Cloud   *ApiprotoCloud   `json:"cloud,omitempty"`
	Compute *ApiprotoCompute `json:"compute,omitempty"`
}

// ApiprotoResourceResourceType defines model for apiprotoResourceResourceType.
type ApiprotoResourceResourceType string

// ApiprotoResponse defines model for apiprotoResponse.
type ApiprotoResponse struct {
	DebugMsg *string                 `json:"debugMsg,omitempty"`
	ErrorMsg *string                 `json:"errorMsg,omitempty"`
	Id       *string                 `json:"id,omitempty"`
	Jobid    *string                 `json:"jobid,omitempty"`
	Status   *ApiprotoResponseStatus `json:"status,omitempty"`
}

// ApiprotoResponseStatus defines model for apiprotoResponseStatus.
type ApiprotoResponseStatus string

// GooglerpcStatus defines model for googlerpcStatus.
type GooglerpcStatus struct {
	Code    *int32         `json:"code,omitempty"`
	Details *[]ProtobufAny `json:"details,omitempty"`
	Message *string        `json:"message,omitempty"`
}

// ProtobufAny `Any` contains an arbitrary serialized protocol buffer message along with a
// URL that describes the type of the serialized message.
//
// Protobuf library provides support to pack/unpack Any values in the form
// of utility functions or additional generated methods of the Any type.
//
// Example 1: Pack and unpack a message in C++.
//
//	Foo foo = ...;
//	Any any;
//	any.PackFrom(foo);
//	...
//	if (any.UnpackTo(&foo)) {
//	  ...
//	}
//
// Example 2: Pack and unpack a message in Java.
//
//	   Foo foo = ...;
//	   Any any = Any.pack(foo);
//	   ...
//	   if (any.is(Foo.class)) {
//	     foo = any.unpack(Foo.class);
//	   }
//
//	Example 3: Pack and unpack a message in Python.
//
//	   foo = Foo(...)
//	   any = Any()
//	   any.Pack(foo)
//	   ...
//	   if any.Is(Foo.DESCRIPTOR):
//	     any.Unpack(foo)
//	     ...
//
//	Example 4: Pack and unpack a message in Go
//
//	    foo := &pb.Foo{...}
//	    any, err := anypb.New(foo)
//	    if err != nil {
//	      ...
//	    }
//	    ...
//	    foo := &pb.Foo{}
//	    if err := any.UnmarshalTo(foo); err != nil {
//	      ...
//	    }
//
// The pack methods provided by protobuf library will by default use
// 'type.googleapis.com/full.type.name' as the type URL and the unpack
// methods only use the fully qualified type name after the last '/'
// in the type URL, for example "foo.bar.com/x/y.z" will yield type
// name "y.z".
//
// JSON
// ====
// The JSON representation of an `Any` value uses the regular
// representation of the deserialized, embedded message, with an
// additional field `@type` which contains the type URL. Example:
//
//	package google.profile;
//	message Person {
//	  string first_name = 1;
//	  string last_name = 2;
//	}
//
//	{
//	  "@type": "type.googleapis.com/google.profile.Person",
//	  "firstName": <string>,
//	  "lastName": <string>
//	}
//
// If the embedded message type is well-known and has a custom JSON
// representation, that representation will be embedded adding a field
// `value` which holds the custom JSON in addition to the `@type`
// field. Example (for message [google.protobuf.Duration][]):
//
//	{
//	  "@type": "type.googleapis.com/google.protobuf.Duration",
//	  "value": "1.212s"
//	}
type ProtobufAny struct {
	// Type A URL/resource name that uniquely identifies the type of the serialized
	// protocol buffer message. This string must contain at least
	// one "/" character. The last segment of the URL's path must represent
	// the fully qualified name of the type (as in
	// `path/google.protobuf.Duration`). The name should be in a canonical form
	// (e.g., leading "." is not accepted).
	//
	// In practice, teams usually precompile into the binary all types that they
	// expect it to use in the context of Any. However, for URLs which use the
	// scheme `http`, `https`, or no scheme, one can optionally set up a type
	// server that maps type URLs to message definitions as follows:
	//
	// * If no scheme is provided, `https` is assumed.
	// * An HTTP GET on the URL must yield a [google.protobuf.Type][]
	//   value in binary format, or produce an error.
	// * Applications are allowed to cache lookup results based on the
	//   URL, or have them precompiled into a binary to avoid any
	//   lookup. Therefore, binary compatibility needs to be preserved
	//   on changes to types. (Use versioned type names to manage
	//   breaking changes.)
	//
	// Note: this functionality is not currently available in the official
	// protobuf release, and it is not used for type URLs beginning with
	// type.googleapis.com.
	//
	// Schemes other than `http`, `https` (or the empty scheme) might be
	// used with implementation specific semantics.
	Type                 *string                `json:"@type,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}

// RhprotoCreateResourceGroupReqBody defines model for rhprotoCreateResourceGroupReqBody.
type RhprotoCreateResourceGroupReqBody struct {
	Tenant        *string                            `json:"Tenant,omitempty"`
	ResourceGroup *RhprotoResourceGroupObjectRequest `json:"resourceGroup,omitempty"`
}

// RhprotoGetTokenReqBody defines model for rhprotoGetTokenReqBody.
type RhprotoGetTokenReqBody struct {
	ClientId  *string `json:"client_id,omitempty"`
	GrantType *string `json:"grant_type,omitempty"`
	Password  *string `json:"password,omitempty"`
	Username  *string `json:"username,omitempty"`
}

// RhprotoGetTokenResponseBody defines model for rhprotoGetTokenResponseBody.
type RhprotoGetTokenResponseBody struct {
	AccessToken      *string `json:"access_token,omitempty"`
	ExpiresIn        *int64  `json:"expires_in,omitempty"`
	IdToken          *string `json:"id_token,omitempty"`
	RefreshExpiresIn *int64  `json:"refresh_expires_in,omitempty"`
	RefreshToken     *string `json:"refresh_token,omitempty"`
	Scope            *string `json:"scope,omitempty"`
	SessionState     *string `json:"session_state,omitempty"`
	TokenType        *string `json:"token_type,omitempty"`
}

// RhprotoGooglerpcStatus defines model for rhprotoGooglerpcStatus.
type RhprotoGooglerpcStatus struct {
	Code    *int32                  `json:"code,omitempty"`
	Details *map[string]interface{} `json:"details,omitempty"`
	Message *string                 `json:"message,omitempty"`
}

// RhprotoJobStatus defines model for rhprotoJobStatus.
type RhprotoJobStatus struct {
	Brief *RhprotoJobStatusBrief `json:"brief,omitempty"`
}

// RhprotoJobStatusBrief defines model for rhprotoJobStatusBrief.
type RhprotoJobStatusBrief struct {
	FailReason *string `json:"FailReason,omitempty"`
	Id         *string `json:"Id,omitempty"`
	StartTime  *string `json:"StartTime,omitempty"`
	Status     *string `json:"Status,omitempty"`
}

// RhprotoResource defines model for rhprotoResource.
type RhprotoResource struct {
	Capabilities      *map[string]interface{}            `json:"Capabilities,omitempty"`
	Deployment        *string                            `json:"Deployment,omitempty"`
	Description       *string                            `json:"Description,omitempty"`
	Elements          *[]ApiprotoResource                `json:"Elements,omitempty"`
	Extensions        *map[string]map[string]interface{} `json:"Extensions,omitempty"`
	GlobalAssetId     *string                            `json:"GlobalAssetId,omitempty"`
	Groups            *ApiprotoGroups                    `json:"Groups,omitempty"`
	Id                *string                            `json:"Id,omitempty"`
	Labels            *[]ApiprotoLabel                   `json:"Labels,omitempty"`
	Name              *string                            `json:"Name,omitempty"`
	Res               *ApiprotoBaseResource              `json:"Res,omitempty"`
	ResType           *ApiprotoResourceResourceType      `json:"ResType,omitempty"`
	ResourceAttribute *ApiprotoResourceAttribute         `json:"ResourceAttribute,omitempty"`
	ResourcePoolId    *string                            `json:"ResourcePoolId,omitempty"`
	ResourceProfileID *string                            `json:"ResourceProfileID,omitempty"`
	ResourceTypeId    *string                            `json:"ResourceTypeId,omitempty"`
	SiteId            *string                            `json:"SiteId,omitempty"`
	Status            *ApiprotoDeploymentStatus          `json:"Status,omitempty"`
	Tags              *[]string                          `json:"Tags,omitempty"`
	Workflow          *string                            `json:"Workflow,omitempty"`
	AState            *ResourceAdminState                `json:"aState,omitempty"`
	AStatus           *ResourceAdminStatus               `json:"aStatus,omitempty"`
	AvStatus          *ResourceAvStatus                  `json:"avStatus,omitempty"`
	CStatus           *ResourceCStatus                   `json:"cStatus,omitempty"`
	OpState           *ResourceOpState                   `json:"opState,omitempty"`
	PStatus           *ResourcePStatus                   `json:"pStatus,omitempty"`
	Public            *ResourcePublic                    `json:"public,omitempty"`
	SStatus           *ResourceSStatus                   `json:"sStatus,omitempty"`
	UState            *ResourceUsageState                `json:"uState,omitempty"`
	UStatus           *ResourceUStatus                   `json:"uStatus,omitempty"`
}

// RhprotoResourceGroupObjectGetResponseBody defines model for rhprotoResourceGroupObjectGetResponseBody.
type RhprotoResourceGroupObjectGetResponseBody struct {
	Description       *string                                        `json:"description,omitempty"`
	Id                *string                                        `json:"id,omitempty"`
	Name              *string                                        `json:"name,omitempty"`
	ResourceSelectors *map[string]RhprotoResourceSelectorGetResponse `json:"resourceSelectors,omitempty"`
	ResourceTypeId    *string                                        `json:"resourceTypeId,omitempty"`
}

// RhprotoResourceGroupObjectRequest defines model for rhprotoResourceGroupObjectRequest.
type RhprotoResourceGroupObjectRequest struct {
	Description       *string                                    `json:"description,omitempty"`
	Id                *string                                    `json:"id,omitempty"`
	Name              *string                                    `json:"name,omitempty"`
	ResourceSelectors *map[string]RhprotoResourceSelectorRequest `json:"resourceSelectors,omitempty"`
	ResourceTypeId    *string                                    `json:"resourceTypeId,omitempty"`
}

// RhprotoResourceSelectorFilter defines model for rhprotoResourceSelectorFilter.
type RhprotoResourceSelectorFilter struct {
	Exclude *map[string]interface{}               `json:"exclude,omitempty"`
	Include *RhprotoResourceSelectorFilterInclude `json:"include,omitempty"`
}

// RhprotoResourceSelectorFilterInclude defines model for rhprotoResourceSelectorFilterInclude.
type RhprotoResourceSelectorFilterInclude struct {
	Labels *[]RhprotoResourceSelectorFilterIncludeLabel `json:"labels,omitempty"`
}

// RhprotoResourceSelectorFilterIncludeLabel defines model for rhprotoResourceSelectorFilterIncludeLabel.
type RhprotoResourceSelectorFilterIncludeLabel struct {
	Key   *string `json:"Key,omitempty"`
	Value *string `json:"Value,omitempty"`
}

// RhprotoResourceSelectorGetResponse defines model for rhprotoResourceSelectorGetResponse.
type RhprotoResourceSelectorGetResponse struct {
	ResourceProfileId *string `json:"ResourceProfileId,omitempty"`
	Filters           *struct {
		Exclude *map[string]interface{} `json:"exclude,omitempty"`
		Include *struct {
			Labels *[]struct {
				Key   *string `json:"Key,omitempty"`
				Value *string `json:"Value,omitempty"`
			} `json:"labels,omitempty"`
		} `json:"include,omitempty"`
	} `json:"filters,omitempty"`
	NumResources *float32           `json:"numResources,omitempty"`
	Resources    *[]RhprotoResource `json:"resources,omitempty"`
	RpId         *string            `json:"rpId,omitempty"`
}

// RhprotoResourceSelectorRequest defines model for rhprotoResourceSelectorRequest.
type RhprotoResourceSelectorRequest struct {
	ResourceProfileId *string                        `json:"ResourceProfileId,omitempty"`
	Filters           *RhprotoResourceSelectorFilter `json:"filters,omitempty"`
	NumResources      *int                           `json:"numResources,omitempty"`
	RpId              *string                        `json:"rpId,omitempty"`
}

// GetTokenJSONRequestBody defines body for GetToken for application/json ContentType.
type GetTokenJSONRequestBody = RhprotoGetTokenReqBody

// CreateResourceGroupJSONRequestBody defines body for CreateResourceGroup for application/json ContentType.
type CreateResourceGroupJSONRequestBody = RhprotoCreateResourceGroupReqBody

// Getter for additional properties for ProtobufAny. Returns the specified
// element and whether it was found
func (a ProtobufAny) Get(fieldName string) (value interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ProtobufAny
func (a *ProtobufAny) Set(fieldName string, value interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ProtobufAny to handle AdditionalProperties
func (a *ProtobufAny) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["@type"]; found {
		err = json.Unmarshal(raw, &a.Type)
		if err != nil {
			return fmt.Errorf("error reading '@type': %w", err)
		}
		delete(object, "@type")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ProtobufAny to handle AdditionalProperties
func (a ProtobufAny) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Type != nil {
		object["@type"], err = json.Marshal(a.Type)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '@type': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
